/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum sensor_packet_types {
    SENSOR_PACKET_TYPES_UNKNOWN_PACKET_TYPE = 0,
    SENSOR_PACKET_TYPES_PPG_RED = 1,
    SENSOR_PACKET_TYPES_PPG_IR = 2,
    SENSOR_PACKET_TYPES_SPECTROMETER = 3,
    SENSOR_PACKET_TYPES_BME = 4,
    SENSOR_PACKET_TYPES_CO2 = 5,
    SENSOR_PACKET_TYPES_IMU = 6,
    SENSOR_PACKET_TYPES_THERMOPILE = 7,
    SENSOR_PACKET_TYPES_LUX = 8,
    SENSOR_PACKET_TYPES_LIDAR = 9,
    SENSOR_PACKET_TYPES_MIC = 10,
    SENSOR_PACKET_TYPES_SHT = 11,
    SENSOR_PACKET_TYPES_SGP = 12,
    SENSOR_PACKET_TYPES_BLINK = 13
} sensor_packet_types_t;

/* Struct definitions */
PB_PACKED_STRUCT_START
typedef struct sensor_packet_header {
    sensor_packet_types_t packet_type;
    uint32_t packed_id;
    uint32_t ms_fromt_start;
    uint32_t ms_from_start;
    uint32_t epoch;
    uint32_t payload_length;
    int32_t reserved;
} pb_packed sensor_packet_header_t;
PB_PACKED_STRUCT_END

PB_PACKED_STRUCT_START
typedef struct lux_packet_payload {
    uint32_t lux;
    uint32_t timestamp;
} pb_packed lux_packet_payload_t;
PB_PACKED_STRUCT_END

PB_PACKED_STRUCT_START
typedef struct lux_packet {
    bool has_header;
    sensor_packet_header_t header;
    pb_size_t payload_count;
    lux_packet_payload_t payload[30];
} pb_packed lux_packet_t;
PB_PACKED_STRUCT_END


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _SENSOR_PACKET_TYPES_MIN SENSOR_PACKET_TYPES_UNKNOWN_PACKET_TYPE
#define _SENSOR_PACKET_TYPES_MAX SENSOR_PACKET_TYPES_BLINK
#define _SENSOR_PACKET_TYPES_ARRAYSIZE ((sensor_packet_types_t)(SENSOR_PACKET_TYPES_BLINK+1))

#define sensor_packet_header_t_packet_type_ENUMTYPE sensor_packet_types_t




/* Initializer values for message structs */
#define SENSOR_PACKET_HEADER_INIT_DEFAULT        {_SENSOR_PACKET_TYPES_MIN, 0, 0, 0, 0, 0, 0}
#define LUX_PACKET_INIT_DEFAULT                  {false, SENSOR_PACKET_HEADER_INIT_DEFAULT, 0, {}}
#define LUX_PACKET_PAYLOAD_INIT_DEFAULT          {0, 0}
#define SENSOR_PACKET_HEADER_INIT_ZERO           {_SENSOR_PACKET_TYPES_MIN, 0, 0, 0, 0, 0, 0}
#define LUX_PACKET_INIT_ZERO                     {false, SENSOR_PACKET_HEADER_INIT_ZERO, 0, {}}
#define LUX_PACKET_PAYLOAD_INIT_ZERO             {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SENSOR_PACKET_HEADER_PACKET_TYPE_TAG     1
#define SENSOR_PACKET_HEADER_PACKED_ID_TAG       2
#define SENSOR_PACKET_HEADER_MS_FROMT_START_TAG  3
#define SENSOR_PACKET_HEADER_MS_FROM_START_TAG   4
#define SENSOR_PACKET_HEADER_EPOCH_TAG           5
#define SENSOR_PACKET_HEADER_PAYLOAD_LENGTH_TAG  6
#define SENSOR_PACKET_HEADER_RESERVED_TAG        7
#define LUX_PACKET_PAYLOAD_LUX_TAG               1
#define LUX_PACKET_PAYLOAD_TIMESTAMP_TAG         2
#define LUX_PACKET_HEADER_TAG                    1
#define LUX_PACKET_PAYLOAD_TAG                   2

/* Struct field encoding specification for nanopb */
#define SENSOR_PACKET_HEADER_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    packet_type,       1) \
X(a, STATIC,   SINGULAR, UINT32,   packed_id,         2) \
X(a, STATIC,   SINGULAR, UINT32,   ms_fromt_start,    3) \
X(a, STATIC,   SINGULAR, UINT32,   ms_from_start,     4) \
X(a, STATIC,   SINGULAR, UINT32,   epoch,             5) \
X(a, STATIC,   SINGULAR, UINT32,   payload_length,    6) \
X(a, STATIC,   SINGULAR, INT32,    reserved,          7)
#define SENSOR_PACKET_HEADER_CALLBACK NULL
#define SENSOR_PACKET_HEADER_DEFAULT NULL

#define LUX_PACKET_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  header,            1) \
X(a, STATIC,   REPEATED, MESSAGE,  payload,           2)
#define LUX_PACKET_CALLBACK NULL
#define LUX_PACKET_DEFAULT NULL
#define lux_packet_t_header_MSGTYPE sensor_packet_header_t
#define lux_packet_t_payload_MSGTYPE lux_packet_payload_t

#define LUX_PACKET_PAYLOAD_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   lux,               1) \
X(a, STATIC,   SINGULAR, UINT32,   timestamp,         2)
#define LUX_PACKET_PAYLOAD_CALLBACK NULL
#define LUX_PACKET_PAYLOAD_DEFAULT NULL

extern const pb_msgdesc_t sensor_packet_header_t_msg;
extern const pb_msgdesc_t lux_packet_t_msg;
extern const pb_msgdesc_t lux_packet_payload_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SENSOR_PACKET_HEADER_FIELDS &sensor_packet_header_t_msg
#define LUX_PACKET_FIELDS &lux_packet_t_msg
#define LUX_PACKET_PAYLOAD_FIELDS &lux_packet_payload_t_msg

/* Maximum encoded size of messages (where known) */
#define LUX_PACKET_PAYLOAD_SIZE                  12
#define LUX_PACKET_SIZE                          465
#define SENSOR_PACKET_HEADER_SIZE                43

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
